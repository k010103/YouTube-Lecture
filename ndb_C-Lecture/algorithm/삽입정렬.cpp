#include <stdio.h>

// O(N ^ 2) 경우에 따라서 횟수가 달라지기 때문에 버블, 선택과 같이 O(N ^ 2) 인 구조,
// '거의 정렬된' 상태에서는 어떤 정렬보다 제일 효율적  
//왼쪽에 있는 작은 값들은 이미 정렬이 되었다고 가정을 하기때문에 하면 할 수록 횟수가 줄어들음  
int main(void){
	int i, j, temp;
	int array[10] = {1, 10, 5, 8, 7, 6, 4, 3, 2, 9};
	for(i = 1; i < 9; i++) { // 9까지 증가하는 이유 : array[j + 1]이랑 위치를 바꾸기 때문에  
		j = i; // 현재 정렬할 원소를 선택해서 적절한 위치에 삽입,
		      //  i의 값은 점점 증가하니까 j의 값도 같이 증가 검토하는 위치도 점점 오른쪽으로 이동  
		while(j >= 0 && array[j] > array[j + 1]) { // while 참일 경우 계속 반복  
			temp = array[j];
			array[j] = array[j + 1];
			array[j + 1] = temp; //위치를 바꾸는 기본 구조  
			j--; //  array의 위치만큼 횟수를 반복한다는 의미  , j를 알맞는 위치에 넣기 위해서  
		}
	}
	for(i = 0; i < 10; i++) {
		printf("%d ", array[i]);
	}
	return 0;
}
